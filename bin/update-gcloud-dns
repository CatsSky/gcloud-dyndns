#!/usr/bin/env python3
import argparse
import socket

from gcloud_dynamic_dns.dns import update_dns

parser = argparse.ArgumentParser()
parser.add_argument("zone_name", help="the name of the GCP zone to manage")
parser.add_argument("dns_name", help="the DNS name to update")
parser.add_argument("--ttl", help="TTL of the update record", default=60)
parser.add_argument("--project_id", default=None, help="name of the GCP project")
parser.add_argument("--force_update", action="store_true", default=False, help="force the DNS update even if the record hasn't changed")
parser.add_argument("--ipv4", action="store_true", default=False, help="updates IPv4 A record, if both ipv4 and ipv6 are not specified both will be updated")
parser.add_argument("--ipv6", action="store_true", default=False, help="updates IPv6 AAAA record, if both ipv4 and ipv6 are not specified both will be updated")

if __name__ == "__main__":
    args = parser.parse_args()
    
    if (not args.ipv4 and not args.ipv6) or (args.ipv4 and args.ipv6):
        ip_kind = (socket.AddressFamily.AF_INET, socket.AddressFamily.AF_INET6)
    elif args.ipv4:
        ip_kind = (socket.AddressFamily.AF_INET,)
    else:
        ip_kind = (socket.AddressFamily.AF_INET6,)
    
    update_dns(args.zone_name, args.dns_name, args.ttl, args.force_update, args.project_id, ip_kind)